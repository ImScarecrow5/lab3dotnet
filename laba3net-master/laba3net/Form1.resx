<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
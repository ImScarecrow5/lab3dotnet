<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAhQAAAAmCAYAAACcVwJqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAGqtJREFUeF7t3QnUtdUUwHFjxsiUhFJZyVhSVOaiEiIloigthUpYpEyfIUIlQ0JE
        hiRCRQiZM5MMZYpKkTljphx+57v7c97Tc+89932/9H7fOv+17nrf57nPcJ5z9tl7n332c89V0n+5ylXy
        n06n0+l0Op150R2KTqfT6XQ6C6bJofjYxz6WPvShD835fOQjH0mf/exn089+9rPRUZ1Op+S3v/1t+s53
        vjPaWspZZ52V/vjHP462Op3lwyWXXJJe/epXp0033XS0p7MY+dOf/pROPfXU9KY3vSm31yGHHJKe9rSn
        jb5d8WlyKH7/+9+n5z73ufm4e9zjHumNb3xjete73pWWLFmS1lxzzSzEX/nKV0ZHdzodvPa1r02rrrpq
        +tWvfpW3L7zwwnTd6143vec978nbnc7y4pOf/GR64AMfmK51rWuN9nQWG1/96lfTGmuske2oz9WvfvV0
        z3veM51zzjmjI1Z8mhwKfOtb38rH7bPPPqM9S+EZ3+52t8uK8rzzzhvt7XQ6v/zlL9PGG2+cHvKQh6ST
        Tz45bbfddmnPPfdMf//730dHdDrLj1e+8pXdoVik/PnPf8528i1veUv6yU9+kv7whz+kf//736NvVx6a
        HQpe1JBDgSOOOCJ/R6A7nc5cfvjDH6YvfelL2cHodK4o6OHuUCxOXvOa16T3ve99o62Vl+XiUBx++OHN
        DsXf/va39MEPfnDZRy4Gyn0+4b2ZbjHFYspFCPnnP/953o9PfepTlzsvPt/97nfnbJ9xxhmjs1LO/bAv
        7i0PxJwWTj/99DyV84EPfCBvl0wqCyaV58wzz8xRnnLf5z73udGZ/0PosjzGfPvnP//5OfsihA7GSr2/
        4AUvyLktpddbXsvcXU3Ug492mcQXv/jFZcf6KEO5/eEPfziH9Mt9QnxG4+W++pnl5zz/+c9Phx12WLrg
        ggtGe1P6xz/+Mee8+lPm7vD4X/GKV+TrRJvOh6Hy//rXv56zryy/uif75OHtb397+utf/5r3j5NxslXu
        r+um/tT3HnedaSOd+rnIKYySyHld7+9973tzXZrjrXOkWtplSIbljpT71F25/eUvf/lyx/z4xz8e3bWt
        jcfJ0qR+6br19+a469yXQF5M6IC3ve1teeTZQqveU3/l9rQ+9Itf/CK97GUvS0cffXQ69NBDs0Pxve99
        L734xS/OUbGSf/3rX1lHfP3rX0+/+93v0qte9apcVwuJLNc67dvf/nbef/7556f3v//9c/KFJtUdXVpe
        p/zU7U1vvehFL0ovfelL0ze+8Y3R3qW0PGMtn+WUg3KX30VfwWWXXZZOPPHEdOCBB2b9r+5b2WWXXfJf
        19M22mycjE3S6Zgkz+xMLWs+pc1AXQcGO+U2GVNn5b6yrukObXnQQQelY489dlnUdcEOhQ5wm9vcJt3k
        Jje5nIEdQuV8//vfTze84Q1zCCgaReFvdatbpVvc4hbppz/9ad7n7+qrr54+/vGP5wfYcccd081vfvNl
        QnqXu9wlveMd78iVfu1rXzttv/32uRM973nPS895znPyg171qldNt7/97bMzEKjc61//+lmJ8Ryvd73r
        pVve8pbpda97XVp//fXTjW984/ysu+++++iM6WXBRRddlDbZZJP0zne+M5dJJ3ed/fbbL/3lL3/Jn2c+
        85l531FHHTVo5BmRLbbYIs+vaUBCrOwPfehD83kEQafBkUcemR7+8IfnujMCVnbzqGHYfvOb36R73/ve
        +TzGoYQArbLKKukGN7hBFuBpRkmdbb755rlclIgykAnn3+EOd8jtGMbG/R73uMfl53NdBtA+If9oB0Lv
        mYyqGDyd9DrXuc4cx899yIi69FGPriMHwb3gfu6lLEYA5OBJT3pS/m5WXNM13OOxj31sLr/n/MxnPpP3
        bbvttsvKf8opp6Rb3/rWue59bnvb2+bng2dWp6utttqyugEjR77lHTmHQrnPfe6TlVRE+Shbiph8kbWW
        60yjbhfya9+d73znvG+HHXbIx7n+Zpttlp0MbfLCF74w943aME1rl5A7ssJJIMP6yYMe9KB8HIVIATk+
        yqSu9Y/9998/76OsQklNa+NpsjRJT6hvhk55yfJJJ52UjcU666yT7nWve6VLL700XwNf+MIXcg6Zfvmj
        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
        Sn+wVLClqGNxHj/h6pnBcSkXm+F47L///qOtlKMesAy5ZwInxLryntOCNWith7ouRTRsc6w6nU6n01mM
        NDkUFldaa621chQgPtaQt269qQMwkrVDEVjP3XcWvymxHr79Z5555mjPMFaLFB0IOBSiAsGuu+6aFwEr
        y7flllvm8rkng89ZKBEJCEOPHXbYIUc1LrroorzNoVhvvfXy/zW1QxHss88+eS15iI4ce+yx+f+gtR7q
        ujTdYvvII4/M251Op9PpLDaaHAoGeqONNhptDTPJodhvv/3yd/XCW1aEs//4448f7RnmpJNOmpMvUTsU
        phAY5XEw9Kuvvvpoaxjr1O+0005p/fXXT4cffniOGMzHobDI2I477pijDueff/7om6W01kPU5c4775yn
        RFzzgAMOWKEX7ul0Op3Oyk2TQ3HQQQdlIyo8XyNhEZMcCsbQdyINJfIy7D/11FNHe4aRp2DaJagdis03
        33xw6sRqoqYwGH/3GVpx1HRCIAFUfgTHYJtttpl3hEI9ieiYdjHlErTWQ9SlBE3PffTRR6dVVlkl7bvv
        vvn7TqfT6XQWG00OhQRLx5R5C5B8GG97THIoTIv47uCDDx7tWcoxxxyTR98SLydRG9LaoZAc6vqnnXba
        aM9SjjrqqJz/ILHR90uWLBl9s5RTTjklnX322fl/+SESLzkBHJGFTnmEkxD5FWith6G6lCNiX5mI2ul0
        Op3OYqHJobj00kvzmwiSGBnN008/PecHbL311steZ5Qz4DpD+RBC9aZMjNpL58EbFaIPkzDVIfegRK5D
        OcVhJO/Nj1VXXTUdeuih+RxvfEiShIjBmmuumY857LDDcnKm1zZ32WWX/D28pcKoe4sFphvWXnvt/H+J
        Z3F/9VCz5557zsnV2G677dJqq62WLr744rzdWg9Rl+FQcHZMxayxxhr5GurcGzciF51Op9PpLAaaHAp4
        1XKDDTbIx/owtqYI4DcYvDJpP0Pndcia8847L2266aZpww03TEcccUTabbfdslNQTgmUMJx+80Luw157
        7ZX23nvv/JEMGveXWxGceOKJ+a2OKJ+kzNJoexvFOeX38ibcR8SAsxRvkhx33HE50uCVT2WIaZ0LLrgg
        HXjggfn8ddZZJ0c+Lrnkkvyd+3u103d+B0Ny57nnnpunUDbZZJOcWIlp9WA6xGuirrPVVlul3XffPW22
        2Wb5FVeOEy688ML8eqrvO51Op9NZDDQ7FLjsssuyYfZDS6YF5oMphjPOOGNOTsQQch9MLZg6KHM3lMGI
        /5BDDsmGuoThd+2haRe4prIvht9zaK2HcYiklPkfnU6n0+lcmczkUPw/YfxFAybh7ZNOp9PpdDpXNin9
        BzJrc0NSBl3SAAAAAElFTkSuQmCC
</value>
  </data>
</root>